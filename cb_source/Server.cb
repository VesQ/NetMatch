//********************************************************************************
// Server.cb
//
// Palvelimen toiminnot
//********************************************************************************

Global gBotFreeze As Byte
Global gLastWarnTime As Integer // Aika milloin viimeksi pelaajaa varoitettiin potkuista

// cbNetworkin Gosub-toteutusta varten tarvittavat muuttujat.
Dim gs_valueInt As Integer
Dim gs_valueFloat As Float
Dim gs_valueString As String
Dim gs_valueShort As Integer
Dim gs_valueByte As Integer

Dim gs_dllMethod As String
Dim gs_memBlockResize As Integer
Dim gs_initValue As Integer
gs_initValue = 0 // Oletus

//================================================================================
// Luodaan palvelin.
//================================================================================
Goto skipCreateServer

CreateServer:
    // Palvelinta ei voi k‰ynnist‰‰ kokoruututilassa
    If gFullScreen = True
        Error(GetText("fs_server"))
        Goto returnCreateServer
    EndIf
    // Portti pit‰‰ olla m‰‰ritelty
    If Int(gServerPort) <= 0 Then
        Error(GetText("no_port"))
        Goto returnCreateServer
    EndIf
    // Jos rekisterˆid‰‰n niin nimi pit‰‰ olla annettu
    //If _register = True Then
        If Trim(gServerName) = "" Then
            Error(GetText("no_servername"))
            Goto returnCreateServer
        EndIf
    //EndIf
    If gGameMap = 0 Then
        Error(GetText("no_map"))
        Goto returnCreateServer
    EndIf
    // K‰ynnistet‰‰n palvelin
    nRet = InitServer(Int(gServerPort), 500)
    If nRet <> 0 Then
        msg$ = "(" + nRet + ") " + GetNetErrorString(nRet)
        Error(msg)
        Goto returnCreateServer
    EndIf
    // Suoritetaan rekisterˆinti
    If gDirectReg = True Then
        t = Timer()
        MsgBox(GetText("registering"), "", MSG_INFO_NOWAIT)
        regOk = GSSRegister(Int(gServerPort), gServerName)
        Wait 500 - (Timer() - t)
        If regOk = False Then
            CloseServer()
            Error(GetText("reg_failed"))
            Goto returnCreateServer
        EndIf
    EndIf
    gGameMode = SERVER
    gServerMapLoop = 0
    If gMapList <> "" Then
        gServerMapLoop = 1
        mapPtr = GetMapFromList( gMapList, 1 )
        curMap.MAPS = ConvertToType( mapPtr )
        gGameMap = curMap\ID
    EndIf

    // Asetetaan kartan nimi gServerMap globaaliin
    gServerMap = gMapNames( gGameMap, 1 )
    
    LoadGameMap(gServerMap)
    ShowObject gMap, ON

    // Alustetaan pelaajat
    For player.PLAYERS = Each PLAYERS
        player\clientId = ""
        player\active   = False
        player\loggedIn = False
        player\name = ""
        player\obj = MakeObject()
        ShowObject player\obj, ON
        ObjectRange player\obj, OBJECT_RANGE
        SetupCollision player\obj, gMap, 2, 4, 2
        ObjectRange player\obj, OBJECT_RANGE
        skill# = 21 - player\playerId
        player\fightRotate   = 1.5 + (skill / 1.5)
        player\shootingAngle = 4.0 + (player\playerId * 1.5)
        player\fov           = 100 + (skill * 3.5)
        player\hasAmmos = False
        player\admin = False
        player\kicked = False
        player\kickReason = ""
        UpdatePlayerProt(player\playerId)
    Next player

    WriteLog("SERVER STARTED")
    Gosub ServerLoop
    SetMap gMap, OFF, OFF
    gGameMode = MENU
    GSSUnregister()
    // L‰hetet‰‰n kaikille clienteille lopetustavu, varataan t‰h‰n aikaa kaksi ja puoli sekuntia.
    rec = Timer()
    Repeat
        nret = ServerRead()
        If nret <> 0 Then
            Gosub gs_InitMemBlock
            gs_valueByte = NET_SERVERCLOSING : Gosub gs_PutByte
            gs_valueByte = NET_END : Gosub gs_PutByte
            ServerSend()
        EndIf
    Until rec + 2500 < Timer()
    CloseServer()
    WriteLog("SERVER STOPPED")
    
    // Nollataan pelaajat
    For player.PLAYERS = Each PLAYERS
        player\clientId = ""
        player\active   = False
        player\loggedIn = False
        player\name = ""
        DeleteObject player\obj
    Next player

    // Poistetaan kaikki ammukset
    For bullet.BULLETS = Each BULLETS
        DeleteObject bullet\obj
        Delete bullet
    Next bullet

    // Poistetaan kaikki l‰hett‰m‰ttˆm‰t viestit
    For nmsg.NET_MESSAGES = Each NET_MESSAGES
        Delete nmsg
    Next nmsg
    
    // Poistetaan poimittavat tavarat
    For item.ITEMS = Each ITEMS
        DeleteObject item\obj
        Delete item
    Next item
    
    If NM_DEVBUILD = False Then
        SetWindow "NetMatch " + gGSSVersion + gPatchString
    Else
        SetWindow "NetMatch " + gGSSVersion + "-dev" + gPatchString
    EndIf
    
    returnCreateServer:
Return

skipCreateServer:

Global gBannedIP$
gBannedIP = ""

//================================================================================
// Palvelimen p‰‰silmukka
//================================================================================
Goto skipServerLoop
ServerLoop:

    If gPlayMode > DM Then
        gMapMaxPlayers  = gMapTeamPlayers * 2
        gMapMaxBots     = gMapTeamPlayers * 2 - 2
        gMapBotDelete   = gMapTeamPlayers * 2 - 2
    EndIf
    If gDisableBots Then
        gMapMaxPlayers = MAX_PLAYERS
        gMapMaxBots = 0
        gMapBotDelete = 0
    EndIf
    
    gPlayerCount        = 0
    gCurrentPlayerId    = 0
    gLastPlayerCount    = 0
    
    ReadBanList()

    ClsColor 0, 0, 255
    ClearKeys
    ShowObject gMap, ON
    DrawGame
    Cls
    DrawScreen
    // LUODAAN BOTIT
    team = 0
    For i = 1 To gMapMaxBots
        player.PLAYERS      = ConvertToType(gPlayers(i))
        player\clientId     = "bot:" + i
        player\name         = player\botName
        player\zombie       = True
        player\active       = True
        player\loggedIn     = True
        player\death        = False
        player\health       = 100
        player\kills        = 0
        player\deaths       = 0
        player\weapon       = GetBotWeapon()
        SpawnObject(player\obj)
        player\x            = ObjectX(player\obj)
        player\y            = ObjectY(player\obj)
        player\angle        = ObjectAngle(player\obj)
        player\team         = team + 1
        If gPlayMode > DM Then
            team = Not team
        EndIf
        UpdatePlayerProt(i)
    Next i
//    gBotCount = gMapMaxBots
//COM1    gPlayerCount = gMapMaxBots
//COM1    CalcPlayers()
    
    // LUODAAN POIMITAVAT TAVARAT
    iid = 1
    For i = 1 To gMapHealth
        SetItem(OBJ_ITEM_HEALTH, iid)
        iid + 1
    Next i
    For i = 1 To gMapAmmo
        SetItem(OBJ_ITEM_AMMO, iid)
        iid + 1
    Next i
    For i = 1 To gMapRocket
        SetItem(OBJ_ITEM_ROCKET, iid)
        iid + 1
    Next i
    For i = 1 To gMapFuel
        SetItem(OBJ_ITEM_FUEL, iid)
        iid + 1
    Next i
    For i = 1 To gMapShotgun
        SetItem(OBJ_ITEM_SHOTGUN, iid)
        iid + 1
    Next i
    For i = 1 To gMapLauncher
        SetItem(OBJ_ITEM_LAUNCHER, iid)
        iid + 1
    Next i
    
    Repeat
        GameUpdate()                // Pelitilanteen p‰ivitys
//COM1        gLastPlayerCount = gPlayerCount
        Goto ReadDataFromClient    // Luetaan clientin l‰hett‰m‰‰ dataa
        // Palaaminen Goto:sta tapahtuu alla olevaan kirjanmerkkiin
        returnToLoop:
        UpdateGame
        If KeyHit(cbKeyF5) Then ReadBanList()
        If KeyHit(cbKeyF8) And gPlayMode > DM Then
            For player.PLAYERS = Each PLAYERS
                If player\active = True Then
                    newTeam = Rand(1,2)
                    SetTeam( player\playerId, newTeam )
                EndIf
            Next player
        EndIf
        If Abs(GetTimeSync()) > 3 Then
//            MakeError GetText("speedhack")
        EndIf
        //CheckPlayerProt()
    Until KeyHit(cbKeyEsc)
    
    ShowObject gMap, OFF
    ClearKeys
    
    Goto returnServerLoop
    
    //================================================================================
    // Luetaan clientin l‰hett‰m‰‰ dataa
    //================================================================================
    ReadDataFromClient:
    // Luetaan dataa
    nRet = ServerRead()

    // Tuli joku virhe
    If nRet <> 0 Then Goto returnToLoop
    
    clientIP$ = GetWord2(NET_ClientId, 1, ":")
    If InStr(gBannedIP, "," + clientIp + ",") > 0 Then
        Gosub gs_InitMemBlock
        gs_valueByte = NET_BANNED : Gosub gs_PutByte
        gs_valueByte = NET_END : Gosub gs_PutByte
        ServerSend()
        WriteLog("Block request blocked (" + clientIP + ")")
        Goto returnToLoop
    EndIf
    
    // Muistipalan alussa on aina luetun datan pituus joka luetaan t‰ss‰ pois
    Gosub gs_GetInt

    // Mit‰ dataa on tulossa
    Gosub gs_GetByte
    netmsg = gs_valueByte

    // Joku liittyy peliin
    If netmsg = NET_LOGIN Then
        Login(True)
        Goto returnToLoop
    EndIf

    // Pelaajan id
    Gosub gs_GetByte
    gCurrentPlayerId = gs_valueByte
    If gCurrentPlayerId < 1 Or gCurrentPlayerId > MAX_PLAYERS Then
        // Pelaajatunnus on v‰‰r‰
        WriteLog("Possible hack attempt from " + GetWord2(NET_ClientId, 1, ":") + " Invalid playerId (" + gCurrentPlayerId + ")")
        Goto returnToLoop
    EndIf
    
    // Tarkistetaan ett‰ pelaaja on kirjautunut oikein.
    player.PLAYERS = ConvertToType(gPlayers(gCurrentPlayerid))
    
    // Tarkistetaan onko pelaaja potkittu
    If player\kicked And player\clientId = NET_ClientId Then
        //_Net_InitMemBlock()
        //_Net_PutByte(NET_KICKED)
        //_Net_PutByte( player\kickerId )
        //_Net_PutByte(gCurrentPlayerId)
        //_Net_PutString( player\kickReason )
        Gosub gs_InitMemBlock
        gs_valueByte = NET_KICKED : Gosub gs_PutByte
        gs_valueByte = player\kickerId : Gosub gs_PutByte
        gs_valueByte = gCurrentPlayerId : Gosub gs_PutByte
        gs_valueString = player\kickReason : Gosub gs_PutString
        ServerSend()
        Goto returnToLoop
    EndIf
    
    If player\clientId <> NET_ClientId Or player\active = False Then
        Gosub gs_InitMemBlock
        gs_valueByte = NET_NOLOGIN : Gosub gs_PutByte
        ServerSend()
//        WriteLog("Possible hack attempt from " + GetWord2(NET_ClientId, 1, ":") + " Not logged in (" + gCurrentPlayerId + ")")
        Goto returnToLoop
    EndIf

    // Pelaaja poistuu pelist‰
    If netmsg = NET_LOGOUT Then
        Login(False, gCurrentPlayerId)
        Goto returnToLoop
    EndIf
    
    // Pelaajan heitto katsojaksi
    If player\toSpectator = True And player\spectatorTime + gSpectatorDelay*1000 < Timer() Then
        SetTeam(player\playerId,0)
        player\health = -10
        player\death = True
        player\timeToDeath = Timer()  
        player\toSpectator = False
        player\spectatorTime = Timer()
        
        newMsg.NET_MESSAGES = New( NET_MESSAGES )
        newMsg\msgType = NET_SERVERMSG
        newMsg\toPlayer = gCurrentPlayerId
        newMsg\msgText = "You have been moved to spectators, AFK timeout is set to "+gMaxSpectatorTime+"s"
    EndIf
    
    // Varoitetaan pelaajaa 5s v‰lein jos ollaan potkimassa ulos
    If player\team = 0 And gMaxSpectatorTime > 0 And Timer() - player\spectatorTime > gMaxSpectatorTime*1000 - 31000 And Timer() - gLastWarnTime > 5000 Then
        timeLeft = (gMaxSpectatorTime*1000 - (Timer() - player\spectatorTime))/1000
        newMsg.NET_MESSAGES = New( NET_MESSAGES )
        newMsg\msgType = NET_SERVERMSG
        newMsg\toPlayer = gCurrentPlayerId
        newMsg\msgText = "You have to join to the game in "+timeLeft+" seconds or you will be kicked out"
        gLastWarnTime = Timer()
    EndIf
    
    // Liian kauan katsojana
    If player\team = 0 And gMaxSpectatorTime > 0 And player\spectatorTime + gMaxSpectatorTime*1000 < Timer() Then
        KickPlayer(player\playerId, 0, "Too long as a spectator")
    EndIf
    
    // Lasketaan pelaajan ja serverin v‰linen lagi
    player\lag = ( Timer() - player\lastActivity )
    
    // P‰ivitet‰‰n pelaajan olemassaolo
    player\lastActivity = Timer()
    sendNames = False
    txtMessage$ = ""
        
    // Luetaan saapuneita viestej‰
    While True
        If netmsg = NET_PLAYER Then
        
            // PELAAJAN DATAA
            Gosub gs_GetShort
            x       = gs_valueShort   // x-positio
            Gosub gs_GetShort
            y       = gs_valueShort   // y-positio
            Gosub gs_GetShort
            angle   = gs_valueShort   // kulma
            Gosub gs_GetByte
            b       = gs_valueByte    // T‰m‰ tavu sis‰lt‰‰ useamman muuttujan (alempana)
            
            // Puretaan b-tavu muuttujiin
            // Jos halutaan esim. lukea 4 bitti‰ kohdasta 0, menee lauseke seuraavasti:
            // value= (b Shl (32-0-4)) Shr (32-4)
            weapon  = (b Shl 28) Shr 28 // Valittuna oleva ase (bitit 0-3)
            hasAmmo = (b Shl 27) Shr 31 // Onko valitussa aseessa ammuksia (bitti 4)
            shoot   = (b Shl 26) Shr 31 // Ampuuko (bitti 5)
            
            Gosub gs_GetByte
            picked  = gs_valueByte    // Poimitun itemin id (0, jos ei poimittu)
            
            // Arvot p‰ivitet‰n vain jos pelaaja on hengiss‰
            If player\death = False And player\team <> 0 Then
                player\x        = x
                player\y        = y
                player\angle    = angle
                player\weapon   = weapon
                player\hasAmmos = hasAmmo
            
                PositionObject player\obj, player\x, player\y
                RotateObject player\obj, player\angle

                // Jos er‰ on vasta alkanut p‰ivitet‰‰n muuttujat
                If Timer()-gSessionStarted < 500 Then
                    player\hackTestX = player\x
                    player\hackTestY = player\y
                EndIf
                
                If gDisableSpeedhackTest = False Then
                    // Tarkistetaan pelaajan nopeus per sekunti
                    If Timer()-player\spHackTimer=>1000 And player\zombie = False Then
                        // Lasketaan pelaajan todellinen maksimi nopeus jolla saa liikkua
                        trueMaxSpeed# = (Sqrt(FORWARD_SPEED * SIDESTEP_SPEED * 2) * 100 / aWeapon( player\weapon, WPNF_WEIGHT ) + 85) * ( player\lag + 1000 ) / 1000.0 
                        If player\spawnTime < Timer()+1000 And Distance(player\x, player\y, player\hackTestX, player\hackTestY)>trueMaxSpeed And player\LoggedIn = True Then
                             nmsg.NET_MESSAGES = New(NET_MESSAGES)
                             nmsg\toPlayer   = player\playerId  // Kenelle viesti l‰hetet‰‰n
                             nmsg\msgType    = NET_SPEEDHACK   // Mik‰ viesti
                        EndIf
                        player\hackTestX = player\x  // Asetetaan pelaajan x-paikka seuraavaa tarkistusta varten
                        player\hackTestY = player\y  // Asetetaan pelaajan y-paikka seuraavaa tarkistusta varten
                        player\spHackTimer = Timer()
                    EndIf
                EndIf
   
                If shoot = 1 Then CreateServerBullet(gCurrentPlayerId)
                // Poimittiinko jotain
                If picked > 0 Then
                    iid = SetItem(0, picked)
                    If iid <> 0 Then
                        item.ITEMS = ConvertToType(iid)
                        // Poimittiinko healthpack
                        If item\itemType = OBJ_ITEM_HEALTH Then
                            player\health = Min(100, player\health + 50)
                            UpdatePlayerProt(player\playerId)
                        EndIf
                    EndIf
                EndIf
            EndIf
            If player\health > 0 And player\team <> 0 Then player\death = False
            If player\loggedIn = False Then
//COM1                gPlayerCount + 1
                player\loggedIn = True
//COM1                CheckBots()
            EndIf
            
        ElseIf netmsg = NET_PLAYERNAME Then
        
            // Nimilista pyydety
            sendNames = True
        
        ElseIf netmsg = NET_TEXTMESSAGE Then
        
            // Pelaaja l‰hetti tekstiviestin
            Gosub gs_GetString
            txtMessage$ = Trim(gs_valueString)
            If Left( txtMessage$, 1 ) = "/" Then 
                parseRet$ = ParseCommand( txtMessage$, gCurrentPlayerId )
                newMsg.NET_MESSAGES = New( NET_MESSAGES )
                newMsg\msgType = NET_SERVERMSG
                newMsg\toPlayer = gCurrentPlayerId
                newMsg\msgText = parseRet$
                txtMessage$ = ""
            EndIf
                
        
        ElseIf netmsg = NET_MAPCHANGE Then
        
            // Pelaaja l‰hetti kartan nimen
            Gosub gs_GetString
            player\mapName = Trim(gs_valueString)
        
        ElseIf netmsg = NET_TEAMINFO Then
            Gosub gs_GetByte
            team = gs_valueByte
            If team = 0 And player\team <> 0 And gMaxSpectatorTime >= 0 Then    // Pelaaja haluaa katsojaksi
                player\toSpectator = True
                player\spectatorTime = Timer()
                newMsg.NET_MESSAGES = New( NET_MESSAGES )
                newMsg\msgType = NET_SERVERMSG
                newMsg\toPlayer = gCurrentPlayerId
                newMsg\msgText = "You will be moved to spectators in "+gSpectatorDelay+" seconds"
            ElseIf gMaxSpectatorTime < 0 Then
                newMsg.NET_MESSAGES = New( NET_MESSAGES )
                newMsg\msgType = NET_SERVERMSG
                newMsg\toPlayer = gCurrentPlayerId
                newMsg\msgText = "Spectator mode is disabled on this server"            
            ElseIf team <> 0 Then
                team = 1
                greenplayers = 0
                redplayers = 0
                If gPlayMode = TDM Then 
                    For plr.PLAYERS = Each PLAYERS
                        If plr\active = True Then
                            If plr\team = 1 Then greenplayers + 1
                            If plr\team = 2 Then redplayers + 1
                        EndIf
                    Next plr
                    If greenplayers<redplayers Then
                        team = 1
                    ElseIf redplayers<greenplayers
                        team = 2
                    Else
                        team = Rand(1,2)
                    EndIf
                EndIf            
                
                // Spawnataan pelaaja
                SetTeam(player\playerId, team)
                SpawnObject(player\obj)
                player\x = ObjectX(player\obj)
                player\y = ObjectY(player\obj)
                player\angle = ObjectAngle(player\obj)
                player\health = 100
                player\death = False
                player\lastValidX = player\x
                player\lastValidY = player\y
                player\hackTestX = player\x
                player\hackTestY = player\y
                player\spawnTime  = Timer()
            EndIf
        Else
            // Viestit loppui tai tuli tuntematon viesti
            Exit
        EndIf
        // Seuraava viesti
        Gosub gs_GetByte
        netmsg = gs_valueByte
    Wend
    
    // Jos er‰ on p‰‰ttynyt niin l‰hetet‰‰n kaikkien pelaajien kaikki tiedot
    If gSessionComplete = True Then sendnames = True
    
    // L‰hetet‰‰n clientille dataa
    Gosub gs_InitMemBlock
    
    // L‰hetet‰‰n kaikkien pelaajien tiedot
    For plr.PLAYERS = Each PLAYERS
        // Onko pyydetty nimet
        If sendNames = True Then
            If plr\active = True Then
                gs_valueByte = NET_PLAYERNAME : Gosub gs_PutByte    // Nimet
                gs_valueByte = plr\playerId : Gosub gs_PutByte      // Pelaajan tunnus
                gs_valueString = plr\name : Gosub gs_PutString        // Nimi
                gs_valueByte = plr\zombie : Gosub gs_PutByte        // Onko botti
                gs_valueByte = plr\team : Gosub gs_PutByte          // Joukkue
            EndIf
        EndIf
        
        // Onko l‰hetetty tekstiviesti
        If Len(txtMessage) > 0 Then
            // L‰hetet‰‰n kaikille muille paitsi boteille
            If plr\active = True And plr\zombie = False Then
                toTeam = player\team
                If Left(txtMessage,1) = "*" Then
                    If plr\team = toTeam Then
                        nmsg.NET_MESSAGES = New(NET_MESSAGES)
                        nmsg\toPlayer   = plr\playerId      // Kenelle l‰hetet‰‰n
                        nmsg\msgType    = NET_TEXTMESSAGE   // Mik‰ viesti
                        nmsg\playerId   = gCurrentPlayerId  // Kuka l‰hetti
                        nmsg\msgText    = txtMessage        // Viesti
                    EndIf
                Else
                    nmsg.NET_MESSAGES = New(NET_MESSAGES)
                    nmsg\toPlayer   = plr\playerId      // Kenelle l‰hetet‰‰n
                    nmsg\msgType    = NET_TEXTMESSAGE   // Mik‰ viesti
                    nmsg\playerId   = gCurrentPlayerId  // Kuka l‰hetti
                    nmsg\msgText    = txtMessage        // Viesti
                EndIf
            EndIf
        EndIf
        
        // L‰hetet‰‰n niiden pelaajien tiedot jotka ovat hengiss‰ ja n‰kyviss‰
        If plr\active = True And plr\team <> 0 Then
            visible = True
            If player\team <> 0 Then
                x1 = ObjectX(player\obj)
                y1 = ObjectY(player\obj)
                x2 = ObjectX(plr\obj)
                y2 = ObjectY(plr\obj)
                If Abs(x1 - x2) > 750 Then visible = False
                If Abs(y1 - y2) > 650 Then visible = False
            EndIf
        
            // Onko n‰kyviss‰ tai voidaanko muuten l‰hett‰‰
            If sendNames = True Or visible = True Or plr\health <= 0 And plr\team <> 0 Then
                // N‰kyy
                gs_valueByte = NET_PLAYER : Gosub gs_PutByte             // Pelaajan tietoja
                gs_valueByte = plr\playerId : Gosub gs_PutByte           // Pelaajan tunnus
                gs_valueShort = ObjectX(plr\obj) : Gosub gs_PutShort     // Sijainti
                gs_valueShort = ObjectY(plr\obj) : Gosub gs_PutShort     // Sijainti
                gs_valueShort = ObjectAngle(plr\obj) : Gosub gs_PutShort // Kulma
                
                // Spawn-protect
                protected = (plr\spawnTime + SPAWN_PROTECT > Timer())
                
                // Muutetaan team arvo v‰lille 0-1
                teamBit = (plr\team = 2)
                
                // Tungetaan yhteen tavuun useampi muuttuja
                b = (plr\weapon Mod 16) Shl 0       // Ase (bitit 0-3)
                b = b + plr\hasAmmos    Shl 4       // Onko ammuksia (bitti 4)
                b = b + teamBit         Shl 6       // Joukkue/tiimi (bitti 6)
                b = b + protected       Shl 7       // Haavoittumaton (bitti 7)
                gs_valueByte = b : Gosub gs_PutByte
                
                gs_valueByte = plr\health : Gosub gs_PutByte             // Terveys
                gs_valueShort = plr\kills : Gosub gs_PutShort            // Tapot
                gs_valueShort = plr\deaths : Gosub gs_PutShort           // Kuolemat
            ElseIf gRadarArrows = True Or gPlayMode=TDM And plr\team <> 0 Then
                // Ei n‰y. L‰hetet‰‰n tutkatieto
                If player\team = plr\team And gRadarArrows = False Then
                    gs_valueByte = NET_RADAR : Gosub gs_PutByte
                    ang# = GetAngle2(player\obj, plr\obj)
                    ra = Int(ang / 360.0 * 255.0)
                    gs_valueByte = ra : Gosub gs_PutByte
                    gs_valueByte = plr\team : Gosub gs_PutByte
                ElseIf gRadarArrows = True Then
                    gs_valueByte = NET_RADAR : Gosub gs_PutByte
                    ang# = GetAngle2(player\obj, plr\obj)
                    ra = Int(ang / 360.0 * 255.0)
                    gs_valueByte = ra : Gosub gs_PutByte
                    gs_valueByte = plr\team : Gosub gs_PutByte
                EndIf
            EndIf
        EndIf
    Next plr
    
    If gServerMapLoop > 0 Then
        map.MAPS = ConvertToType( gCurrentMapPtr )
        timeLeft = gSessionStarted + gPeriodLength * 60000 - Timer()
        If gSessionComplete = True And timeLeft < -5 And player\mapName <> map\name Then
            gs_valueByte = NET_MAPCHANGE : Gosub gs_PutByte
            gs_valueString = map\name : Gosub gs_PutString
            gs_valueInt = gMapCRC : Gosub gs_PutInt
        EndIf
    EndIf
    
    // L‰hetet‰‰n kaikki pelaajalle osoitetut viesit
    For nmsg.NET_MESSAGES = Each NET_MESSAGES
        If nmsg\toPlayer = gCurrentPlayerId Then
            If nmsg\msgType = NET_LOGIN Then
                // Joku on liittynyt peliin
                gs_valueByte = nmsg\msgType : Gosub gs_PutByte
                gs_valueByte = nmsg\playerId : Gosub gs_PutByte
                gs_valueString = nmsg\msgText : Gosub gs_PutString
                gs_valueByte = nmsg\playerId2 : Gosub gs_PutByte
            
            ElseIf nmsg\msgType = NET_LOGOUT Then
                // Joku on poistunut pelist‰
                gs_valueByte = nmsg\msgType : Gosub gs_PutByte
                gs_valueByte = nmsg\playerId : Gosub gs_PutByte
            
            ElseIf nmsg\msgType = NET_NEWBULLET Then
                // Uusi ammus on ammuttu
                If nmsg\weapon = WPN_CHAINSAW Then
                    gs_valueByte = nmsg\msgType : Gosub gs_PutByte
                    gs_valueShort = nmsg\bulletId : Gosub gs_PutShort    // Ammuksen tunnus
                    gs_valueByte = nmsg\playerId : Gosub gs_PutByte      // Kuka ampui
                    
                    // Tungetaan samaan tavuun useampi muuttuja:
                    // Huomaa l‰hes samat operaatiot myˆs Else-lohkossa
                    b = (nmsg\weapon Mod 16) Shl 0  // Mill‰ aseella (mod 16 jottei vie yli 4 bitti‰)
                    b = b + nmsg\sndPlay     Shl 4  // Soitetaanko ‰‰ni
                    //b = b + nmsg\handShooted Shl 5  // Kummalla k‰dell‰ ammuttiin (ei tarvita moottorisahalle)
                    gs_valueByte = b : Gosub gs_PutByte
                    // Ammuksen sijainti
                    gs_valueShort = nmsg\x : Gosub gs_PutShort
                    gs_valueShort = nmsg\y : Gosub gs_PutShort
                    gs_valueShort = 0 : Gosub gs_PutShort
                Else
                    // Etsit‰‰n ammus
                    bid = FindBullet(nmsg\bulletId)
                    If bid <> 0 Then
                        bullet.BULLETS = ConvertToType(bid)
                        gs_valueByte = nmsg\msgType : Gosub gs_PutByte
                        gs_valueShort = nmsg\bulletId : Gosub gs_PutShort   // Ammuksen tunnus
                        gs_valueByte = nmsg\playerId : Gosub gs_PutByte     // Kuka ampui
                        
                        // Tungetaan samaan tavuun useampi muuttuja:
                        // Esimerkiksi bool arvon (1/0) asettaminen tavun b 4. bittiin tapahtuu seuraavasti
                        // b = b + bool Shl 4
                        b = (nmsg\weapon Mod 16) Shl 0  // Mill‰ aseella (mod 16 jottei vie yli 4 bitti‰)
                        b = b + nmsg\sndPlay     Shl 4  // Soitetaanko ‰‰ni
                        b = b + nmsg\handShooted Shl 5  // Kummalla k‰dell‰ ammuttiin
                        gs_valueByte = b : Gosub gs_PutByte
                        
                        // Ammuksen sijainti
                        gs_valueShort = ObjectX(bullet\obj) : Gosub gs_PutShort
                        gs_valueShort = ObjectY(bullet\obj) : Gosub gs_PutShort
                        gs_valueShort = ObjectAngle(bullet\obj) : Gosub gs_PutShort
                    EndIf
                EndIf
            
            ElseIf nmsg\msgType = NET_TEXTMESSAGE Then
                // Tekstiviesti
                gs_valueByte = nmsg\msgType : Gosub gs_PutByte
                gs_valueByte = nmsg\playerId : Gosub gs_PutByte
                gs_valueString = nmsg\msgText : Gosub gs_PutString
            
            ElseIf nmsg\msgType = NET_SERVERMSG Then
                // Palvelimen generoima viesti
                gs_valueByte = nmsg\msgType : Gosub gs_PutByte
                gs_valueString = nmsg\msgText : Gosub gs_PutString
            
            ElseIf nmsg\msgType = NET_BULLETHIT Then
                // Osumaviesti
                gs_valueByte = nmsg\msgType : Gosub gs_PutByte      // Vistin tunnus
                gs_valueShort = nmsg\bulletId : Gosub gs_PutShort   // Ammuksen tunnus
                gs_valueByte = nmsg\playerId : Gosub gs_PutByte     // Keneen osui
                gs_valueShort = nmsg\x : Gosub gs_PutShort          // Miss‰ osui
                gs_valueShort = nmsg\y : Gosub gs_PutShort          // Miss‰ osui
                gs_valueByte = nmsg\weapon : Gosub gs_PutByte       // Mist‰ aseesta ammus on
            
            ElseIf nmsg\msgType = NET_ITEM Then
                // Tavaraviesti
                gs_valueByte = nmsg\msgType : Gosub gs_PutByte      // Vistin tunnus
                gs_valueByte = nmsg\itemId : Gosub gs_PutByte       // Tavaran tunnus
                gs_valueByte = nmsg\itemType : Gosub gs_PutByte     // Tavaran tyyppi
                gs_valueShort = nmsg\x : Gosub gs_PutShort          // Miss‰ osui
                gs_valueShort = nmsg\y : Gosub gs_PutShort          // Miss‰ osui
            
            ElseIf nmsg\msgType = NET_KILLMESSAGE Then
                // Tappoviesti
                gs_valueByte = nmsg\msgType : Gosub gs_PutByte      // Viestin tunnus
                gs_valueByte = nmsg\playerId : Gosub gs_PutByte     // Tappaja
                gs_valueByte = nmsg\playerId2 : Gosub gs_PutByte    // Tapettu
                gs_valueByte = nmsg\weapon : Gosub gs_PutByte       // Ase
                plr.PLAYERS = ConvertToType(gPlayers(nmsg\playerId))
                gs_valueShort = plr\kills : Gosub gs_PutShort       // Tappajan tapot
                gs_valueShort = plr\deaths : Gosub gs_PutShort      // Tappajan kuolemat
                plr.PLAYERS = ConvertToType(gPlayers(nmsg\playerId2))
                gs_valueShort = plr\kills : Gosub gs_PutShort       // Uhrin tapot
                gs_valueShort = plr\deaths : Gosub gs_PutShort      // Uhrin kuolemat
            
            ElseIf nmsg\msgType = NET_KICKED Then
                // Pelaaja potkittiin
                gs_valueByte = nmsg\msgType : Gosub gs_PutByte      // Viestin tunnus
                gs_valueByte = nmsg\playerId : Gosub gs_PutByte     // Potkaisija
                gs_valueByte = nmsg\playerId2 : Gosub gs_PutByte    // Kuka potkittiin
                gs_valueString = nmsg\msgText : Gosub gs_PutString  // Potkujen syy

            ElseIf nmsg\msgType = NET_TEAMINFO Then
                // L‰hetet‰‰n pelaajan joukkue
                gs_valueByte = nmsg\msgType : Gosub gs_PutByte      // Viestin tunnus
                gs_valueByte = nmsg\playerId : Gosub gs_PutByte     // Pelaaja
                plr.PLAYERS = ConvertToType(gPlayers(nmsg\playerId))
                gs_valueByte = plr\team : Gosub gs_PutByte          // Joukkue

            ElseIf nmsg\msgType = NET_SPEEDHACK Then 
                gs_valueByte = nmsg\msgType : Gosub gs_PutByte
                Login( False, gCurrentPlayerId )
            EndIf
            Delete nmsg
        EndIf
    Next nmsg
    
    // Jos on pyydetty nimilista niin palautetaan myˆs kaikkien tavaroiden tiedot
    If sendNames = True Then
        For item.ITEMS = Each ITEMS
            gs_valueByte = NET_ITEM : Gosub gs_PutByte              // Vistin tunnus
            gs_valueByte = item\itemId : Gosub gs_PutByte           // Tavaran tunnus
            gs_valueByte = item\itemType : Gosub gs_PutByte         // Tavaran tyyppi
            gs_valueShort = ObjectX(item\obj) : Gosub gs_PutShort   // Miss‰
            gs_valueShort = ObjectY(item\obj) : Gosub gs_PutShort   // Miss‰
        Next item
    EndIf
    
    // Pelisession aikatiedot
    gs_valueByte = NET_SESSIONTIME : Gosub gs_PutByte                  // Viestin tunnus
    periodLength = gPeriodLength * 60
    gs_valueInt = periodLength : Gosub gs_PutInt                       // Er‰n pituus
    gameTime = (Timer() - gSessionStarted) / 1000
    //gameTime = Min(gameTime, periodLength)
    gs_valueInt = gameTime : Gosub gs_PutInt                           // Kuinka kauan on pelattu
    gs_valueByte = gSessionComplete : Gosub gs_PutByte
    
    gs_valueByte = NET_END : Gosub gs_PutByte
    ServerSend()
    
    // Takaisin serverilooppiin
    Goto returnToLoop
    
    returnServerLoop:
Return

skipServerLoop:

//==============================================================================
// cbNetwork Gosub-komentoina. Annettavat arvot Put-gosubeille ovat:
//  - gs_valueInt As Integer
//  - gs_valueFloat As Float
//  - gs_valueString As String
//  - gs_valueShort As Short
//  - gs_valueByte As Byte
// N‰ihin myˆs tallennetaan Get-gosubien palautusarvot.
// Erikoisparametri kirjaston sis‰ist‰ gs_MemBlockResize-Gosubia varten:
//  - gs_blockLength%
// Myˆs gs_InitMemBlock-Gosubille on oma erikoisparametrinsa:
//  - gs_initValue%
//==============================================================================

Goto skipCbNetwork

gs_InitMemBlock:
    If gNetMemBlock Then DeleteMEMBlock gNetMemBlock
    gNetMemBlock = MakeMEMBlock(gs_initValue + 4)
    PokeInt gNetMemBlock, 0, 0
    gNetMemBlockOffset = 4
    gs_initValue = 0 // Nollataan alkuper‰iseen tilaan
Return

gs_DeleteMemBlock:
    DeleteMEMBlock gNetMemBlock
    gNetMemBlockOffset = 0
    gNetMemBlock = 0
Return

gs_MemBlockResize:
    lMemSize = MEMBlockSize(gNetMemBlock)
    If gNetMemBlockOffset + gs_blockLength > lMemSize Then
        ResizeMEMBlock gNetMemBlock, gNetMemBlockOffset + gs_blockLength
    EndIf
Return

gs_PutInt:
    gs_blockLength = 4
    Gosub gs_MemBlockResize
    PokeInt gNetMemBlock, gNetMemBlockOffset, gs_valueInt
    gNetMemBlockOffset + 4
Return

gs_GetInt:
    gs_valueInt = PeekInt(gNetMemBlock, gNetMemBlockOffset)
    gNetMemBlockOffset + 4
Return

gs_PutShort:
    gs_blockLength = 2
    Gosub gs_MemBlockResize
    PokeShort gNetMemBlock, gNetMemBlockOffset, gs_valueShort
    gNetMemBlockOffset + 2
Return

gs_GetShort:
    gs_valueShort = PeekShort(gNetMemBlock, gNetMemBlockOffset)
    If gs_valueShort > 32768 Then gs_valueShort = gs_valueShort - 65536
    gNetMemBlockOffset + 2
Return

gs_GetUShort:
    gs_valueShort = PeekShort(gNetMemBlock, gNetMemBlockOffset)
    gNetMemBlockOffset + 2
Return

gs_PutFloat:
    gs_blockLength = 4
    Gosub gs_MemBlockResize
    PokeFloat gNetMemBlock, gNetMemBlockOffset, gs_valueFloat
    gNetMemBlockOffset + 4
Return

gs_GetFloat:
    gs_valueFloat = PeekFloat(gNetMemBlock, gNetMemBlockOffset)
    gNetMemBlockOffset + 4
Return

gs_PutByte:
    gs_blockLength = 1
    Gosub gs_MemBlockResize
    PokeByte gNetMemBlock, gNetMemBlockOffset, gs_valueByte
    gNetMemBlockOffset + 1
Return

gs_GetByte:
    gs_valueByte = PeekByte(gNetMemBlock, gNetMemBlockOffset)
    gNetMemBlockOffset + 1
Return

gs_PutString:
    lStrLen = Len(gs_valueString)
    gs_blockLength = lStrLen + 4
    Gosub gs_MemBlockResize
    PokeInt gNetMemBlock, gNetMemBlockOffset, lStrLen
    gNetMemBlockOffset + 4
    For i = 1 To lStrLen
        PokeByte gNetMemBlock, gNetMemBlockOffset, Asc(Mid(gs_valueString, i, 1))
        gNetMemBlockOffset + 1
    Next i
Return

gs_GetString:
    Gosub gs_GetInt
    lStrLen = gs_valueInt
    gs_valueString = ""
    For i = 1 To lStrLen
        Gosub gs_GetByte
        c = gs_valueByte
        If c > 0 Then gs_valueString = gs_valueString + Chr(c)
    Next i
Return

// Hyp‰t‰‰n koko cbNetwork-gosub h‰rp‰kkeen yli kun tiedosto includetataan.
skipCbNetwork:


Function ReadBanList()
    gBannedIP = ","
    If FileExists("ipban.txt") Then
        f = OpenToRead("ipban.txt")
        While Not EOF(f)
            txt$ = Trim(GetWord2(ReadLine(f), 1, "#"))
            gBannedIP = gBannedIP + txt + ","
        Wend
        CloseFile f
    EndIf
EndFunction

//================================================================================
// Palvelimelta potkaiseminen.
//================================================================================
Function KickPlayer( _playerId, _kickerId, _reason$ = "" )
    player.PLAYERS  = ConvertToType(gPlayers(_playerId))
    player\kicked = True
    player\kickReason = _reason$
    player\kickerId = _kickerId
    player\loggedIn = False
    player\active = False
    player\admin = False
    player\team = 1
    // L‰hetet‰‰n viesti kaikille muille paitsi boteille
    For plr.PLAYERS = Each PLAYERS
        If plr\active = True And plr\zombie = False Then
            nmsg.NET_MESSAGES   = New(NET_MESSAGES)
            nmsg\toPlayer       = plr\playerId
            nmsg\msgType        = NET_KICKED
            nmsg\playerId       = _kickerId
            nmsg\playerId2      = _playerId
            nmsg\msgText        =_reason$
        EndIf
    Next plr
EndFunction

//================================================================================
// Komentojen parsiminen. Palauttaa merkkijonossa tiedon miten meni.
//================================================================================
Function ParseCommand$( _command$, _playerId )
    If Left( _command$, 1 ) <> "/" Then Return False
    
    check$ = GetWord2( Mid( _command$, 2 ), 1 )
    params$ = Trim( Mid( _command$, Len( check$ ) + 3 ) )
    
    // Kutsuja
    player.PLAYERS = ConvertToType( gPlayers( _playerId ) )
    
    ret$ = "Unknown command"
    
    If check$ = "admin" Then
        If player\admin = False Then
            If params$ = gServerAdminPassword And gServerAdminPassword <> "" Then
                player\admin = True
                ret$ = "You're now an admin"
            Else
                ret$ = "Wrong password"
            EndIf
        Else
            ret$ = "You're already an admin!"
        EndIf
    ElseIf check$ = "kick" Then
        If player\admin = True Then
            playerName$ = GetWord2( params$, 1 )
            If Len( Trim( playerName$ ) )=0 Then
                ret$ = "You didn't in"+"put a name!"
            Else
                kickReason$ = Trim( Mid( params$, Len( playerName$ ) + 1 ) )
                kicked = False
                For plr.PLAYERS = Each PLAYERS
                    If Lower(plr\name) = Lower( playerName ) Then
                        If plr\zombie = False Then
                            KickPlayer( plr\playerId, _playerId, kickReason$ )
                            kicked = True
                            ret$ = "Kicked player " + plr\name + " with reason " + kickReason
                            Exit
                        Else
                            kicked = True // Ett‰ saadaan oikea virheviesti
                            ret$ = "You can't kick a bot"
                            Exit
                        EndIf
                    EndIf
                Next plr
                If Not kicked Then ret$ = "Couldn't find player " + playerName$
            EndIf
        Else
            ret$ = "You're not an admin"
        EndIf
    ElseIf check$ = "team" Then
        If player\admin = True Then
            If gPlayMode > DM Then
                playerName$ = GetWord2( params$, 1 )
                If Len( Trim( playerName$ ) )=0 Then
                    ret$ = "You didn't in"+"put a name! Use /team <name> <Gr"+"een|R"+"ed|1|2>"
                Else
                    toTeam = 0
                    toTeamCheck$ = Upper( GetWord2( params$, 2 ) )
                    If toTeamCheck$ = "GREEN" Or toTeamCheck$ = "1" Then
                        toTeam = 1
                    ElseIf toTeamCheck$ = "RED" Or toTeamCheck$ = "2" Then
                        toTeam = 2
                    EndIf
                    
                    nameCheck$ = Lower( playerName$ )
                    If toTeam > 0 Then
                        // Joukkuetta haluttiin vaihtaa, etsit‰‰n pelaaja kokoelmasta.
                        For plr.PLAYERS = Each PLAYERS
                            If plr\active = True And Lower( plr\name ) = nameCheck$ Then
                                switched = SetTeam( plr\playerId, toTeam )
                                Exit
                            EndIf
                        Next plr
                        If switched Then
                            ret$ = "Switched player " + playerName$ + " to team " + toTeam
                        Else
                            ret$ = "Failed to switch player " + playerName$ + " to team " + toTeam
                        EndIf
                    Else
                        ret$ = "Wrong team ID! Use /team <name> <Gr"+"een|R"+"ed|1|2>"
                    EndIf
                EndIf
            Else
                ret$ = "This gamemode has no teams!"
            EndIf
        Else
            ret$ = "You're not an admin"
        EndIf
    ElseIf check$ = "radars" Then
        If player\admin = True Then
            If params$ = "" Then 
                gRadarArrows = Not gRadarArrows
            Else
                gRadarArrows = (params$ = "1" Or Upper(params$) = "ON")
            EndIf
            If gRadarArrows = 1 Then 
                If gPlayMode > DM Then
                    ret$ = "Radar now shows everybody"
                Else
                    ret$ = "Radar is now enabled"
                EndIf
            Else
                If gPlayMode > DM Then
                    ret$ = "Radar now shows only your teammates"
                Else
                    ret$ = "Radar is now disabled"
                EndIf
            EndIf
        Else
            ret$ = "You're not an admin!"
        EndIf
    ElseIf check$ = "roundlength" Or check$ = "timelimit" Then
        If player\admin = True Then 
            // Vaihdetaan pilkku pisteeksi, jotta Float osaa antaa Intille oikean desimaalin
            intParam = Int( Float( Replace( params$, ",", "." ) ) )
            If intParam >= 1 And intParam <= 60 Then
                ret$ = "Round length is now "+intParam+" minute"
                If intParam <> 1 Then ret$ = ret$ + "s"
                gPeriodLength = intParam
                gSessionStarted = Timer() // Nollataan kello
            Else
                ret$ = "Round length must be set between 1 a"+"nd 60 minutes!"
            EndIf
        Else
            ret$ = "You're not an admin!"
        EndIf
    ElseIf check$ = "bot" Then
        If player\admin = True Then
            action$ = GetWord2( params$, 1 )
            If Len( Trim( action$ ) )=0 Then
                ret$ = "Correct syntax is /bot <action>"
            Else
                If action$ = "limit" Then
                    newBotLimit=Min(Int(GetWord2(params$,2)), MAX_PLAYERS)
                    SetBotLimit(newBotLimit)
                    ret$ = "Bot limit set t"+"o "+newBotLimit
                ElseIf action$ = "freeze" Then
                    freeze$ = Trim(GetWord2(params$, 2))
                    If Len(freeze$)=0 Or freeze$=action$ Then
                        gBotFreeze = Not gBotFreeze
                    Else
                        gBotFreeze = (freeze<>0)
                    EndIf
                    If gBotFreeze Then
                        ret$ = "All bots freezed"
                    Else
                        ret$ = "All bots released"
                    EndIf
                Else
                    ret$ = "Unknown bot action '" + action$ + "'"
                EndIf
            EndIf
        Else
            ret$ = "You're not an admin!"
        EndIf
    EndIf
    
    WriteLog( player\name + " - " + ret + " [" + _command + "]")
    Return ret$
EndFunction

//================================================================================
// Asettaa pelaajan joukkueen. Palauttaa True jos joukkuetta vaihdettiin,
// False jos joukkue oli jo parametrina annettu.
//================================================================================
Function SetTeam( _playerId, _team )
    player.PLAYERS = ConvertToType( gPlayers(_playerId) )
    If _team <> player\team Then
        player\team = _team
        For plr.PLAYERS = Each PLAYERS
            If plr\active = True And plr\zombie = False Then
                nmsg.NET_MESSAGES   = New(NET_MESSAGES)
                nmsg\msgType        = NET_TEAMINFO
                nmsg\toPlayer       = plr\playerId
                nmsg\playerId       = player\playerId
            EndIf
        Next plr
        Return True
    EndIf
    Return False
EndFunction

Function SetBotLimit(newBotLimit)
    gMapMaxBots   = newBotLimit
    gMapBotDelete = newBotLimit
    gMapMaxPlayers = newBotLimit + 1 // J‰tet‰‰n aina tilaa yhdelle pelaajalle.
    // ...ellei raja tule vastaan.
    If gMapMaxPlayers > MAX_PLAYERS Then gMapMaxPlayers = MAX_PLAYERS
    
    // Jos asetettava bottien limitti on pienempi kuin kartan asetuksissa
    // oleva pelaajien maksimim‰‰r‰ niin asetetaan pelaajien maksimim‰‰r‰
    // kartan asetuksissa m‰‰r‰ttyyn.
    curMap.MAPS = ConvertToType( gCurrentMapPtr )
    If curMap\maxPlayers > gMapMaxPlayers Then gMapMaxPlayers = curMap\maxPlayers
    CheckBots()
End Function
