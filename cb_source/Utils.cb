//********************************************************************************
// Utils.cb
//
// Yleisiä funktioita
//********************************************************************************

//--------------------------------------------------------------------------------
// Pelin vakionopeuden muuttujat
//--------------------------------------------------------------------------------
Global g_frameTime#
g_frameTime = 0.0
Global g_tmpTime
g_tmpTime = 0

//================================================================================
// Palautetaan siirtymä (pikseliä sekunnissa)
//================================================================================
Function PxPerSec(px#)
    Return px# * g_frameTime
End Function

//================================================================================
// Palautetaan kääntymä (astetta sekunnissa)
//================================================================================
Function DgrPerSec(dgr#)
    Return dgr# * g_frameTime
End Function

//================================================================================
// Päivitetään vakionopeusajastin
//================================================================================
Function UpdateFrameTimer()
    curTime = TIMER()
    If g_tmpTime = 0 Then g_tmpTime = curTime
    g_frameTime = (curTime - g_tmpTime) / 1000.0
    g_tmpTime = curTime
End Function

//================================================================================
// Toimiva GetWord-funktio, CB:n oma kusee ääkkösiin päättyvien sanojen kanssa.
// @author Jare
//================================================================================
Function GetWord2$(stri$, index, separator$ = " ")
    countWord = 1
    wordBegin = 1
    separLen  = Len(separator)
    pos       = 0
    word$     = ""
    Repeat
        pos       = InStr(stri$, separator, pos + separLen)
        word$     = Mid(stri$, wordBegin, pos - wordBegin)
        wordBegin = pos + separLen
        If index = countWord Then Return word$
        countWord = countWord + 1
    Until pos = False
    word$ = Mid(stri$, wordBegin, pos - wordBegin)
    If index = countWord Then Return word$ Else Return ""
EndFunction

//================================================================================
// Syöttökenttä
//================================================================================
Global gInputBlinker, gTextModified
gInputBlinker = 0
gTextModified = False
Function InputText(_x, _y, _w, _h, _text$, _onlyNums = 0)
    origText$ = _text

    // Otetaan nykyinen väri talteen
    r = getRGB(RED)
    g = getRGB(GREEN)
    b = getRGB(BLUE)
    
    // Ensin syöttökentän tausta mustaksi
    Color 0, 0, 0
    Box _x - 2, _y, _w, _h, ON
    
    // Kentän reunoille kehykset
    Color r, g, b
    Box _x - 3, _y - 1, _w + 2, _h + 2, OFF

    // Mitä näppäintä on painettu
    key = GetKey()
    
    // Deletellä teksti tyhjäksi
    If key = 4 Then _text = ""
    
    // Sallitaanko vain numerot
    If _onlyNums = True Then
        If key >= 48 And key <= 57 Then
            _text = _text + Chr(key)
        EndIf
    Else
        // Teksti ei saa mennä kentän yli
        If TextWidth(_text) < _w - 20 Then
            If (key => 32 And key <= 126) Or InStr("åäöÅÄÖ", Chr(key)) > 0 Then 
                _text = _text + Chr(key)
            EndIf
        EndIf
    EndIf
    
    // Backspace
    If key = 8 And Len(_text) > 0 Then
        _text = Left(_text, Len(_text) - 1)
    EndIf
    
    // Kursorin vilkutus
    If gInputBlinker + 1000 < Timer() Then
        gInputBlinker = Timer()
    EndIf
    tmpTxt$ = _text
    If gInputBlinker + 500 < Timer() Then tmpTxt = tmpTxt + "_"
    Text _x, _y, tmpTxt
    
    If origText <> _text Then gTextModified = True
    Return _text
EndFunction

Global gTimeStart, gTimeDiff

Function GetTimeSync(_start = 0)
    t = Int(Timer() / 1000)
    tmStart = GetTime()
    If tmStart < gTimeStart Or _start = True Then
        gTimeStart = GetTime()
        gTimeDiff = gTimeStart - t
    EndIf
    diff = tmStart - t
    Return diff - gTimeDiff
EndFunction

Function GetTime()
    timeText$ = Time()
    h = Int(GetWord2(timeText, 1, ":"))
    m = Int(GetWord2(timeText, 2, ":"))
    s = Int(GetWord2(timeText, 3, ":"))
    t = s + (m * 60) + (h * 3600)
    Return t
EndFunction

//================================================================================
// Palauttaa tiedoston nimen absoluuttisesta tai relativiisesta polusta.
//================================================================================
Function GetFileName$( _path$ )

    searchParam$ = Replace( _path$, "/", "\" )
    
    fileNameTmp = 1
    searchLen = Len( searchParam$ )
    While InStr( searchParam$, "\", fileNameTmp ) > 0
        fileNameTmp = fileNameTmp + 1
        If fileNameTmp > searchLen Then
            Exit
        EndIf
    Wend 
    
    ret$ = Mid( searchParam$, fileNameTmp )
    
    Return ret$
EndFunction

//================================================================================
// Palauttaa kansion, jossa parametrina annettu tiedosto sijaitsee.
// Palautusarvo riippuu siitä, annettiinko relatiivinen vai absoluuttinen polku - 
// relatiivinen palauttaa relatiivisen polun kansioon ja absoluuttinen vastaavasti
// absoluuttisen polun.
//================================================================================
Function GetDirectoryPath$( _filePath$ )

    If IsDirectory( _filePath$ ) Then Return _filePath$
    
    searchParam$ = Replace( _filePath$, "/", "\" )
    dirTmp = Len( GetEXEName() ) - 1
    While InStr( searchParam$, "\", dirTmp ) = 0
        dirTmp = dirTmp - 1
        If dirTmp < 1 Then Exit
    Wend 
    
    If dirTmp < 1 Then Return ""
    
    ret$ = Left( searchParam$, dirTmp )
    
    Return ret$
EndFunction 

//================================================================================
// Luo koko polun kansiot, mikäli niitä ei ole valmiina
//================================================================================
Function MakeDirs( _path$ )
    searchParam$ = Replace( _path, "/", "\" )
    //Check if the folder exists
    currentPath$ = GetWord2(searchParam,1,"\")
    If IsDirectory(currentPath) = False Then MakeDir currentPath
    //And it's subfolders
    For i = 2 To Int(CountWords(searchParam,"\")) - 1
        currentPath = currentPath + "\" + GetWord2(searchParam,i,"\")
        If IsDirectory(currentPath) = False Then MakeDir currentPath
    Next i
EndFunction

//================================================================================
// Pyöristää liukuluvun annetulle tarkuudelle
//================================================================================
Function Round#(n#, decimals)
    Return Float(Int(n*10^decimals)/10.0^decimals)
End Function

//==================================================================
// Input()-funktiota muistuttava syöte [ Valtzu ]
// -----------------------------
// Luo CB:n omaa Input()-funktiota muistuttavan syötteen. 
// Tekstissä voi liikkua nuolinäppäimillä, 
// myös home- ja end-näppäimet toimivat.
//
// * Funktioiden tehtävät:
//
//   - NewInput: Luo uuden syötteen
//     > Palauttaa syötteen muistiosoitteen
//
//   - ActiveInput: Asettaa syötteen aktiiviseksi tai palauttaa
//     nykyisen syötteen muistiosoitteen
//     > Parametrina NewInput-funktiolta saatu muistiosoite
//     > Jos parametria ei anneta, niin palauttaa nykyisen syötteen
//
//   - SetInput2Position: Asettaa tekstikursorin kohdan tekstissä
//     (VesQ:n lisäys alkuperäiseen funktiokokoelmaan)
//     > Parametrit:
//       - 1: Syötteen muistiosoite
//       - 2: Haluttu kursorin kohta
//
//   - Input2: Hoitaa itse syötteen toiminnan.
//     > Parametrit:
//       -   1: Syötteen muistiosoite
//       -   2: Syötteen sisältämä teksti (kts. esimerkki)
//       - 3&4: Syötteen tekstin aloituskoordinaatit
//     > Funktio palauttaa syötteen sisältämän tekstin
//
// * Globaalit muuttujat:
//     __InputActive
//         > Sisältää aktiivisen syötteen muistipalan osoitteen
//
// -----------------------------
//
// Vinkki:
//   Aktiivisen muistipalan osoite kannattaa ottaa talteen muuttujaan,
//   niin vältyt turhilta funktiokutsuilta.
//
//==================================================================

// -----------------------------
// FUNKTIOT
// ----------------------------- 
 
Global __InputActive
Function ActiveInput(mem=0)
    If mem=0 Then Return __InputActive
    __InputActive = mem
End Function
 
Function NewInput()
    tmpmem = MakeMEMBlock(27)
    __InputActive=tmpmem
    PokeInt tmpmem,23,TextHeight("I")
    Return tmpmem
End Function
 
Function SetInput2Position(datmem,pos)
    PokeInt datmem,4,Max(pos, 0)
EndFunction
 
Function Input2$(datmem,txt$,x,y)
    aika=Timer()
    active=(datmem=__InputActive)
    h=PeekInt(datmem,23)
    blink = PeekInt(datmem,0)
    curpos = Max(PeekInt(datmem,4),0)
    exs = PeekInt(datmem,9)
    exc = PeekByte(datmem,13)
    delay = PeekInt(datmem,14)
    del = PeekByte(datmem,18)
    blinkkaa=Not PeekByte(datmem,8)
    If active Then
        For i=0 To 220
            tmp=tmp+(i^2)*KeyDown(i)
        Next i
        If tmp<>exs Then exc=0:delay=0:del=0
        k = GetKey()
        If KeyHit(181) Then k=47
        numpad=0
        For i=71 To 83
            If i=78 Or i=74 Then i+1
            If KeyHit(i) Then numpad=i Then Exit
        Next i
        If numpad Then
            Select numpad
                Case 83:k=44
                Case 82:k=48
                Case 79:k=49
                Case 80:k=50
                Case 81:k=51
                Case 75:k=52
                Case 76:k=53
                Case 77:k=54
                Case 71:k=55
                Case 72:k=56
                Case 73:k=57
            End Select
        EndIf
        If k Then
            exc=k:delay=0:del=0:blink=aika+500:blinkkaa=False:PokeInt datmem,0,blink:PokeByte datmem,8,blinkkaa
        EndIf
        txtlen=Len(txt)
        If (exc>31 And (exc<127 Or exc>159) And ((((tmp=exs) And tmp<>0) And aika>delay) Or k)) And (exc<>45 Or KeyDown(181)=0) Then
            If del=0 Then delay=aika+400:del=1 Else delay=aika+20
            txt=StrInsert(txt,curpos,Chr(exc))
            curpos=curpos+1
            blinkkaa=True
        ElseIf (exc=8 Or exc=127) And curpos>0 And (aika>delay Or k) Then
            If del=0 Then delay=aika+400:del=1 Else delay=aika+20
            If exc=127 Then
                ttt=curpos
                For i=curpos To 1 Step -1
                    a=Asc(Mid(txt,i,1))
                    If ((a<48 Or (a>57 And a<65) Or (a>90 And a<97) Or (a>122 And a<192)) And a<>39) Then
                        If i=ttt Then txt=StrRemove(txt,i,1):curpos-1
                        Exit
                    EndIf
                    txt=StrRemove(txt,i,1)
                    curpos-1
                Next i
            Else
                txt=StrRemove(txt,curpos,1)
                curpos-1
            EndIf
            blinkkaa=True
        ElseIf exc=4 And (aika>delay Or k) Then
            If del=0 Then delay=aika+400:del=1 Else delay=aika+20
            If curpos<txtlen Then txt=StrRemove(txt,curpos+1,1)
            blinkkaa=True
        ElseIf k=2 Then
            curpos=txtlen
        ElseIf k=1 Then
            curpos=0
        ElseIf (exc=30 Or exc=31) And (aika>delay Or k) Then
            If del=0 Then delay=aika+400:del=1 Else delay=aika+20
            blinkkaa=True
            curpos=Min(Max(curpos+(exc=30)-(exc=31),0),txtlen)
        EndIf
    EndIf
    If aika>blink Then
        PokeInt datmem,0,aika+500
        PokeByte datmem,8,blinkkaa
    EndIf
    txtlen=Len(txt)
    exs=tmp
    Text x,y,txt
    If blinkkaa And active Then
        ww=TextWidth(Mid(txt,1,curpos))
        Text x+ww,y,"_"
    EndIf
    PokeInt datmem,4,curpos
    PokeInt datmem,9,exs
    PokeByte datmem,13,exc
    PokeInt datmem,14,delay
    PokeByte datmem,18,del
    Return txt
EndFunction

//--------------------------------------------------------------------------------
// FPS-riippumaton CurveValue
//--------------------------------------------------------------------------------
Function smooth#(_new#,_old#,_smooth#)
    Return _old + PxPerSec((_new - _old) * (1.0 / _smooth)) * 32
EndFunction 