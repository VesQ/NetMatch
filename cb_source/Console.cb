//********************************************************************************
// Console.cb
//
// Clientin pelinaikainen konsoli.
//********************************************************************************

//--------------------------------------------------------------------------------
// Kokoelma viesteille
//--------------------------------------------------------------------------------
Type CONSOLE_MESSAGES
    Field message   As String
EndType

//--------------------------------------------------------------------------------
// Konsoli-ikkunan koko
//--------------------------------------------------------------------------------
Const CONSOLE_WIDTH  = 600
Const CONSOLE_ROWS   = 25


//--------------------------------------------------------------------------------
// Komennot
// Komentojen toiminnallisuus tapahtuu RunCommand-funktiossa
//--------------------------------------------------------------------------------
Const COMMAND_HELP      = 0
Const COMMAND_QUIT      = 1
Const COMMAND_JOIN      = 2
Const COMMAND_SPECTATE  = 3
Const COMMAND_COUNT     = 3

Const CMD_NAME  = 0 // Name
Const CMD_ARGS  = 1 // Arguments
Const CMD_DESC  = 2 // Description
Const CMD_COUNT = 2

Dim aCommands(COMMAND_COUNT, CMD_COUNT) As String

//--------------------------------------------------------------------------------
// Parametrien määrää ei ole rajoitettu; ne erotetaan toisistaan välilyönnein.
// Hakasulkeet parametrin ympärillä tarkoittavat valinnaista parametriä
//--------------------------------------------------------------------------------

aCommands(COMMAND_HELP, CMD_NAME) = "help"
aCommands(COMMAND_HELP, CMD_ARGS) = "[command]"
aCommands(COMMAND_HELP, CMD_DESC) = "Prints the description of a command"

aCommands(COMMAND_QUIT, CMD_NAME) = "quit"
aCommands(COMMAND_QUIT, CMD_ARGS) = ""
aCommands(COMMAND_QUIT, CMD_DESC) = "Quits the game"

aCommands(COMMAND_JOIN, CMD_NAME) = "join"
aCommands(COMMAND_JOIN, CMD_ARGS) = "[team]"
aCommands(COMMAND_JOIN, CMD_DESC) = "Joins to team, team can be 0 for spectator, if left blank it will join to game" // Myöhemmin myös 1 ja 2

aCommands(COMMAND_SPECTATE, CMD_NAME) = "spectate"
aCommands(COMMAND_SPECTATE, CMD_ARGS) = ""
aCommands(COMMAND_SPECTATE, CMD_DESC) = "Joins to spectators"

Global gDevConsoleText$, gDevConsoleInput, gDevConsoleACId
gDevConsoleACId = -1

//================================================================================
// Lisätään viesti konsoliin
// Viestissä voi käyttää muuttujia %1-4 ja antaa ne parametreinä
//================================================================================
Function WriteConsole(_message$, var1$ = "", var2$ = "", var3$ = "", var4$ = "")
    _message = Replace(Replace(_message, "%1", var1), "%2", var2)
    _message = Replace(Replace(_message, "%3", var3), "%4", var4)
    lineCount = CountWords(_message, "\n")
    For i = 1 To lineCount
        msg.CONSOLE_MESSAGES = New(CONSOLE_MESSAGES)
        msg\message     = Replace(GetWord2(_message, i, "\n"),"\t","    ")
    Next i
EndFunction

//================================================================================
// Suoritetaan komento
// Parametrit: komento$, tulostetaanko output konsoliin
//================================================================================
Function RunCommand(_command$, _output = 1)

    _command = Trim(_command)
    
    // Poistutaan, jos ei ole komentoa
    If Len(_command) = 0 Then Return False
    
    cmd$  = Lower(GetWord2(_command$, 1))
    cmdId = -1
    
    For i = 0 To COMMAND_COUNT
        If cmd = aCommands(i, CMD_NAME) Then
            cmdId = i
            Exit
        EndIf
    Next i
    out$ = ""
    
    
    If Not cmdId = -1 Then
        // Mikäli tänne asti päästään, on syötetty komento varmasti olemassa;
        // sitä ei siis tarvitse enää tarkistaa.
    
        // Tarkistetaan, annettiinko oikea määrä parametrejä
        If CheckArguments(_command, cmdId) = False Then
            WriteConsole("Invalid syntax for '%1'.", cmd)
            Return False
        EndIf
        
        // Syntax: help [command]
        If cmdId = COMMAND_HELP Then
            helpAbout$ = GetArgument("command", _command, cmdId)
            If helpAbout = "" Then
                out = out + "This is the NetMatch console.\nAvailable commands:\n"
                For i = 0 To COMMAND_COUNT
                    out = out + "\t"+aCommands(i, CMD_NAME)+"\n"
                Next i
            Else
                helpAbout = Lower(helpAbout)
                helpCmdId = -1    
                For i = 0 To COMMAND_COUNT
                    If helpAbout = aCommands(i, CMD_NAME) Then
                        helpCmdId = i
                        Exit
                    EndIf
                Next i
                If helpCmdId = -1 Then
                    out = out + "Unknown command '"+helpAbout+"'"
                Else
                    out = out + "Syntax: " + aCommands(helpCmdId, CMD_NAME) + " " + aCommands(helpCmdId, CMD_ARGS) + "\n"
                    out = out + "\t" + aCommands(helpCmdId, CMD_DESC)+"\n"
                EndIf
            EndIf
            
            
        // Syntax: quit
        ElseIf cmdId = COMMAND_QUIT Then
            // Kirjaudutaan ulos servulta (kopioitu Player.cb:stä)
            // Odotellaan max 2 sekuntia että linja on "vapaa"
            t = Timer()
            While ClientState() = 1
                If t + 2000 < Timer() Then Exit
            Wend
            If ClientState() = 2 Then ClientRead()
            // Lähetetään poistumisviesti jos ei kyseessä ollut potkut
            _Net_InitMemBlock()
            _Net_PutByte(NET_LOGOUT)
            _Net_PutByte(gCurrentPlayerId)
            ClientSend()
            // Odotellaan vielä puoli sekuntia
            Wait 500 - (Timer() - t)
            End
 
 
        // Syntax: join
        ElseIf cmdId = COMMAND_JOIN Then
            team = GetArgument("team", _command, cmdId, 1)
            If team < 0 Or team > 2 Then
                out = "Team must be 0 for spectator or 1 for joining to game" // Myöhemmin myös tiimit 1 ja 2
            Else
                gChangeTeam = team // Jos 0, liittyy katsojaksi, jos jotain muuta liittyy peliin ja serveri päättää tiimin tällä hetkellä
            EndIf
        
        // Syntax: spectate
        ElseIf cmdId = COMMAND_SPECTATE Then
            gChangeTeam = 0
   
        EndIf
    Else
        out = out + "Unknown command '" + cmd + "'."
    EndIf
    If _output = True Then
        WriteConsole(out)
    EndIf
EndFunction


//================================================================================
// Näytetään jonossa olevat viestit ruudulla
//================================================================================
Function DrawConsole()
    If gDevConsoleInput = 0 Then gDevConsoleInput = NewInput()
    SetFont gFonts(FNT_DEVCONSOLE)
    sw = ScreenWidth()
    sh = ScreenHeight()
    rowHeight = TextHeight("|")
    margin = 10
    cHeight = (CONSOLE_ROWS+1)*rowHeight+margin*2
    Color 100, 80, 70
    Box sw/2-CONSOLE_WIDTH/2, sh/2-cHeight/2, CONSOLE_WIDTH, cHeight
    Color 50,40,35
    Box sw/2-CONSOLE_WIDTH/2+margin/2, sh/2-cHeight/2+margin/2, CONSOLE_WIDTH-margin, cHeight-margin-rowheight
    Color 70,60,55
    Box sw/2-CONSOLE_WIDTH/2+margin/2, sh/2+cHeight/2-margin/2-rowHeight+1, CONSOLE_WIDTH-margin, rowheight
    msgCount = 0
    msg.CONSOLE_MESSAGES = Last(CONSOLE_MESSAGES)
    While msg <> NULL
        If msgCount >= CONSOLE_ROWS Then
            msg_.CONSOLE_MESSAGES=msg
            msg = Before(msg)
            Delete msg_
        Else
            Color cbwhite
            msgCount + 1
            Text sw/2-CONSOLE_WIDTH/2+margin, sh/2+cHeight/2-margin-rowHeight*(msgCount+1), msg\message
            msg = Before(msg)
        EndIf
    Wend
    
    Color 255,255,255
    maxLen = RoundDown((CONSOLE_WIDTH-margin)/Float(TextWidth("_")))
    If Len(gDevConsoleText) > maxLen Then gDevConsoleText = Left(gDevConsoleText, maxLen)
    
    // Tab-complete
    If gKeyTab Then
        For i = 0 To COMMAND_COUNT
            id = (gDevConsoleACId + 1 + i) Mod (COMMAND_COUNT + 1)
            If InStr(aCommands(id, CMD_NAME), gDevConsoleText) = 1 Then
                gDevConsoleACId = id
                Exit
            EndIf
        Next i
        gKeyTab = False
    EndIf
    If gDevConsoleACId > -1 Then
        consoleText$ = aCommands(gDevConsoleACId, CMD_NAME) + " "
        SetInput2Position(gDevConsoleInput, Len(consoleText))
    Else
        consoleText$ = gDevConsoleText
    EndIf
    prevText$ = consoleText
    consoleText = Input2(gDevConsoleInput, consoleText, sw/2-CONSOLE_WIDTH/2+margin/2+1, sh/2+cHeight/2-margin/2-rowHeight+1)
    If prevText <> consoleText Then
        gDevConsoleText = consoleText
        gDevConsoleACId = -1
    EndIf
    If gKeyReturn Then
        WriteConsole("$ " + consoleText)
        RunCommand(consoleText)
        gDevConsoleText = ""
        gDevConsoleACId = -1
        gKeyReturn = False
    EndIf
EndFunction


// Tarkistaa, onko komennolle annettu oikea määrä parametrejä
Function CheckArguments(_command$, _cmdId)
    arguments$ = aCommands(_cmdId, CMD_ARGS)
    argCount   = CountWords(arguments)
    wordCount  = CountWords(_command)
    
    // Jos on liikaa parametrejä, hylätään komento
    If wordCount - 1 > argCount Then Return False
    
    // Poistetaan laskuista valinnaiset parametrit
    i = InStr(arguments, "[")
    If i > 0 Then
        argCount = CountWords(Left(arguments, i-1))
    EndIf
    
    // ...ja tarkistetaan onko pakollisia parametrejä riittävästi
    If wordCount < argCount Then Return False
    
    // Tänne saakka päästiin, eli kaikki parametrit on OK!
    Return True
EndFunction

Function GetArgument(_arg$, _command$, _cmdId, _default$ = "")
    If Len(aCommands(_cmdId, CMD_ARGS)) = 0 Or Len(_arg) = 0 Then Return _default
    _arg = Lower(_arg)
    
    arguments$ = aCommands(_cmdId, CMD_ARGS)
    argCount = Min(CountWords(arguments), Int(CountWords(_command)) - 1)
    
    For i = 1 To argCount
        word$ = GetWord2(arguments, i)
        If word = _arg Or word = "["+_arg+"]" Then
            Return GetWord2(_command, i + 1)
        EndIf
    Next i
    
    // Tänne saakka päästiin eikä löytynyt, mitä etsittiin -> palautetaan oletus
    Return _default
EndFunction
